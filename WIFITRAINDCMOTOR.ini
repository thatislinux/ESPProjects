#include <PubSubClient.h>
#include <SPI.h>
#include <ESP8266WiFi.h>


bool motorSwitch = HIGH;

const char* ssid = "";
const char* password = "";

char* topic = "#";
char* server = "184.72.114.126";  //MQTT BROKER IP

char message_buff[100];


void callback(char* topic, byte* payload, unsigned int length) {

  int i = 0;
  Serial.println("Received Topic: " + String(topic));
  // create character buffer with ending null terminator (string)
  for (i = 0; i < length; i++) {
    message_buff[i] = payload[i];
  }
  message_buff[i] = '\0';
  String msgString = String(message_buff);
  Serial.println("PayLoadString: " + msgString);
  int state = digitalRead(2);  // get the current state of GPIO1 pin
  if (msgString == "OFF") {   // if there is a "1" published to any

    digitalWrite(2, !state);     // set pin to the opposite state
    Serial.println("MOTOR SWITCH OFF COMMAND Received......");
    switch_off_motor();
    delay(1000);
  } else 
  {
    if (msgString == "ON") {   // if there is a "1" published to any

    digitalWrite(2, !state);     // set pin to the opposite state
    Serial.println("MOTOR SWITCH ON COMMAND Received......");
    switch_on_motor();
    delay(1000);
  }
}
}
void switch_off_motor() {
digitalWrite(D5, LOW);
digitalWrite(D6,LOW);
digitalWrite(D7,LOW);
digitalWrite(D8,LOW);
Serial.println("MOTOR SWITCHED OFF");
}
void switch_on_motor() {
digitalWrite(D5, HIGH);
digitalWrite(D6, HIGH);
digitalWrite(D7, HIGH);
digitalWrite(D8, HIGH);
Serial.println("MOTOR SWITCHED ON");
}
String macToStr(const uint8_t* mac)
{
  String result;
  for (int i = 0; i < 6; ++i) {
    result += String(mac[i], 16);
    if (i < 5)
      result += ':';
  }
  return result;
}
WiFiClient wifiClient;
PubSubClient client(server, 1883, callback, wifiClient);

void setup() {
  Serial.begin(115200);
  delay(10);
  // Setup motors
  int i;
  pinMode(D5,OUTPUT);
  pinMode(D6,OUTPUT);
  pinMode(D7,OUTPUT);
  pinMode(D8,OUTPUT);
  pinMode(2, OUTPUT);
  digitalWrite(2, 0);
  switch_on_motor();
  Serial.print("Connecting to SSID: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  //  connection to broker script.
  if (client.connect("arduinoClient")) {
    client.publish("TRAIN", "Subscribing to MOTOR Switch Panel");
    client.subscribe("MOTORSWITCH");   //Name of the Topic to be set
  }
}

void loop() {

  client.loop();
}
